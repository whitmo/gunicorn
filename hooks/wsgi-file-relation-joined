#!/bin/bash
set -e

unit_name=${JUJU_REMOTE_UNIT//\//-}
working_dir=$(relation-get working_dir)

if [ -z "$working_dir" ] ; then
    juju-log "No working_dir yet: skipping."
    exit 0 # wait for future handshake
fi

variables="wsgi_wsgi_file wsgi_workers wsgi_worker_class wsgi_worker_connections wsgi_max_requests wsgi_timeout wsgi_backlog wsgi_keep_alive wsgi_extra wsgi_user wsgi_group wsgi_umask wsgi_log_file wsgi_log_level wsgi_access_logfile wsgi_access_logformat"

declare -A VAR
for v in $variables;do
  VAR[$v]=$(relation-get $v)
  if [ -z "${VAR[$v]}" ] ; then
    VAR[$v]=$(config-get $v)
  fi
done

juju-log "Got variables: ${VAR[@]}"


if [ -z "$wsgi_error_logfile" ] ; then
    error_logfile="${working_dir}/gunicorn.log"
fi


PORT=8080
quit=0

while [ "$quit" -ne 1 ]; do
    if [[ true == $(netstat -natl | grep 'tcp' | grep 'LISTEN' | awk '{print $4}' | cut -d: -f2 | grep -v -q $PORT || echo "true") ]]
    then
        quit=1
    else
        PORT=`expr $PORT + 1`
    fi
done

juju-log "Writing config file: /etc/gunicorn.d/${unit_name}-${JUJU_RELATION_NAME}.conf"

cat > /etc/gunicorn.d/${unit_name}-${JUJU_RELATION_NAME}.conf <<EOF
CONFIG = {
    'mode': 'wsgi',
    'environment': {
        'PYTHONPATH': '${working_dir}',
    },
    'working_dir': '${working_dir}',
    'user': '${VAR[wsgi_user]}',
    'group': '${VAR[wsgi_group]}',
    'args': (
        '--name=${unit_name}-${JUJU_RELATION_NAME}',
        '--workers=${VAR[wsgi_workers]}',
        '--worker-class=${VAR[wsgi_worker_class]}',
        '--worker-connections=${VAR[wsgi_worker_connections]}',
        '--max-requests=${VAR[wsgi_max_requests]}',
        '--backlog=${VAR[wsgi_backlog]}',
        '--timeout=${VAR[wsgi_timeout]}',
        '--keep-alive=${VAR[wsgi_keep_alive]}',
        '--umask=${VAR[wsgi_umask]}',
        '--bind=0.0.0.0:${PORT}',
        '--log-file=${VAR[wsgi_log_file]}',
        '--log-level=${VAR[wsgi_log_level]}',
        '--access-logfile=${VAR[wsgi_access_logfile]}',
        '--access-logformat=${VAR[wsgi_access_logformat]}',
        ${VAR[wsgi_extra]}
        '${VAR[wsgi_wsgi_file]}',
    ),
}
EOF


juju-log "start/restart gunicorn"

# We need this because when the contained charm configuration or code changed
# Gunicorn needs to restart to run the new code.
service gunicorn start || service gunicorn restart

juju-log "Opening port: $PORT"
open-port $PORT/tcp
